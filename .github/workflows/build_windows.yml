name: Build Capierre Binary Windows

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.9, 3.10.x, 3.11, 3.12]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup C/C++ Compiler
        id: setup-compiler
        uses: rlalik/setup-cpp-compiler@master
        with:
          compiler: gcc-latest

      - name: Verify GCC Installation
        run: |
          gcc --version
          g++ --version

      - name: Build gui
        working-directory: ./gui
        run: |
          python -m pip install --upgrade pip
          pip install -r ../tool/requirements.txt
          python -m PyInstaller `
            --collect-all z3                                    `
            --collect-all pyvex                                 `
            --collect-all angr                                  `
            --collect-all unicorn                               `
            --collect-all cle                                   `
            --paths=../tool/src                                 `
            --add-data "style.qss;."                            `
            --add-data "./challenges;./challenges"              `
            --add-data "./challenge_files;./challenge_files"    `
            --add-data "./expected_output;./expected_output"    `
            --onefile --name capierre_gui main.py

      - name: Upload gui artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-gui
          path: dist/capierre_gui*

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-cmd
          path: dist/capierre_cmd*

  release:
    name: Create Release
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          files: artifacts/**/gui*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          files: artifacts/**/cmd*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
